<Activity mc:Ignorable="sap sap2010" x:Class="GetTransactionData" this:GetTransactionData.Config="[new Dictionary(of String, Object) from {{&quot;InputPath&quot;, &quot;TestData/*.xls*&quot;}, {&quot;TempFolder&quot;, &quot;TestData/Temp&quot;}}]" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="TransactionData" Type="OutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="TransactionItem" Type="OutArgument(ui:QueueItem)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1032,1914.4</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GetRequestData_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Get next transaction data from an input Excel file as specified in Config.xlsx" DisplayName="GetTransactionData" sap:VirtualizedContainerService.HintSize="907.2,3295.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="inputData" />
      <Variable x:TypeArguments="sd:DataRow" Name="freshItem" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <If Condition="[Config.Keys.Contains(&quot;InputFile&quot;) AndAlso File.Exists(Config(&quot;InputFile&quot;).ToString)]" DisplayName="If existing input file" sap:VirtualizedContainerService.HintSize="702.4,447.2" sap2010:WorkflowViewState.IdRef="If_4">
      <If.Then>
        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_11">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Then>
      <If.Else>
        <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim inputPath As String = Config(&quot;InputPath&quot;).ToString&#xD;&#xA;&#xD;&#xA;If (inputPath Is Nothing OrElse String.IsNullOrEmpty(inputPath)) Then&#xD;&#xA;&#xD;&#xA; Dim slash As Int32 = inputPath.LastIndexOfAny(&quot;/\&quot;.ToCharArray)&#xD;&#xA; Dim files As String() = Directory.GetFiles(inputPath.Substring(0, slash), inputPath.Substring(slash+1))&#xD;&#xA;&#xD;&#xA; If (files.Count &gt; 0) Then&#xD;&#xA;  inputPath = New FileInfo(files(0)).Name&#xD;&#xA;  Console.WriteLine(&quot;New input file match: &quot; + inputPath)&#xD;&#xA;  inputPath = Path.Combine(Config(&quot;TempFolder&quot;).ToString, inputPath)&#xD;&#xA;  File.Move(files(0), inputPath)&#xD;&#xA;  Config(&quot;InputFile&quot;) = inputPath&#xD;&#xA; End If&#xD;&#xA;Else&#xD;&#xA;&#xD;&#xA;&#x9;Config(&quot;InputFile&quot;) = Config(&quot;InputPath&quot;)&#xD;&#xA;&#xD;&#xA;End If" DisplayName="Invoke code to get next input file" sap:VirtualizedContainerService.HintSize="333.6,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
          <ui:InvokeCode.Arguments>
            <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config">
              <VisualBasicReference x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="Config" />
            </InOutArgument>
          </ui:InvokeCode.Arguments>
        </ui:InvokeCode>
      </If.Else>
    </If>
    <If Condition="[Config.Keys.Contains(&quot;InputFile&quot;) AndAlso File.Exists(Config(&quot;InputFile&quot;).ToString)]" DisplayName="If existing input file" sap:VirtualizedContainerService.HintSize="702.4,1566.4" sap2010:WorkflowViewState.IdRef="If_6">
      <If.Then>
        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="668.8,1306.4" sap2010:WorkflowViewState.IdRef="Sequence_12">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ExcelApplicationScope Password="{x:Null}" SensitivityLabel="{x:Null}" CreateNewFile="False" DisplayName="Get data from Excel file" sap:VirtualizedContainerService.HintSize="635.2,1246.4" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" SensitivityOperation="None" Visible="False" WorkbookPath="[Config(&quot;InputFile&quot;).ToString]">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Workbook" sap:VirtualizedContainerService.HintSize="601.6,1113.6" sap2010:WorkflowViewState.IdRef="Sequence_14">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExcelWriteCell Cell="D1" DisplayName="Insert Column Status" sap:VirtualizedContainerService.HintSize="568,120" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="Sample" Text="Status" />
                  <ui:ExcelWriteCell Cell="E1" DisplayName="Insert Column Message" sap:VirtualizedContainerService.HintSize="568,120" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="Sample" Text="Message" />
                  <ui:ExcelReadRange AddHeaders="True" DataTable="[inputData]" DisplayName="Read Data" sap:VirtualizedContainerService.HintSize="568,92" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" SheetName="Sample">
                    <ui:ExcelReadRange.Range>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </ui:ExcelReadRange.Range>
                  </ui:ExcelReadRange>
                  <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[inputData]" DisplayName="Search rows for a fresh one" sap:VirtualizedContainerService.HintSize="568,721.6" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                    <ui:ForEachRow.Body>
                      <ActivityAction x:TypeArguments="sd:DataRow">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Loop" sap:VirtualizedContainerService.HintSize="534.4,532.8" sap2010:WorkflowViewState.IdRef="Sequence_7">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Default="[row(&quot;Status&quot;).ToString.Trim]" Name="status" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[String.IsNullOrEmpty(status) OrElse status.StartsWith(&quot;Retry&quot;)]" DisplayName="If next item match" sap:VirtualizedContainerService.HintSize="500.8,472.8" sap2010:WorkflowViewState.IdRef="If_2">
                            <If.Then>
                              <Sequence DisplayName="Match" sap:VirtualizedContainerService.HintSize="467.2,221.6" sap2010:WorkflowViewState.IdRef="Sequence_8">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign DisplayName="Keep row found" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_8">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="sd:DataRow">[freshItem]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="sd:DataRow">[row]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:Break DisplayName="Break search" sap:VirtualizedContainerService.HintSize="433.6,48" sap2010:WorkflowViewState.IdRef="Break_2" />
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEachRow.Body>
                  </ui:ForEachRow>
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
          </ui:ExcelApplicationScope>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_13">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
    <If Condition="[freshItem is Nothing]" DisplayName="If data to process" sap:VirtualizedContainerService.HintSize="702.4,1227.2" sap2010:WorkflowViewState.IdRef="If_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Assign DisplayName="Output Nothing" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_14">
          <Assign.To>
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[TransactionData]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[Nothing]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Prepare output" sap:VirtualizedContainerService.HintSize="500.8,961.6" sap2010:WorkflowViewState.IdRef="Sequence_10">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Initialize transaction data" sap:VirtualizedContainerService.HintSize="467.2,113.6" sap2010:WorkflowViewState.IdRef="Assign_5">
            <Assign.To>
              <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[TransactionData]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[new Dictionary(of String, Object)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:Annotation.AnnotationText="ID filed is required in the main file" DisplayName="Set transaction ID" sap:VirtualizedContainerService.HintSize="467.2,144.8" sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Object">[TransactionData("ID")]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Object">[freshItem("Name").ToString]</InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
          <ui:ForEach x:TypeArguments="sd:DataColumn" CurrentIndex="{x:Null}" DisplayName="Move data in dictionary structure" sap:VirtualizedContainerService.HintSize="467.2,250.4" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[inputData.Columns]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="sd:DataColumn">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataColumn" Name="col" />
                </ActivityAction.Argument>
                <Assign DisplayName="Set data values" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_9">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Object">[TransactionData(col.ColumnName)]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Object">[freshItem(col)]</InArgument>
                  </Assign.Value>
                </Assign>
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
          <Assign DisplayName="Keep row count for updates" sap:VirtualizedContainerService.HintSize="467.2,113.6" sap2010:WorkflowViewState.IdRef="Assign_16">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Object">[TransactionData("RowCount")]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Object">[inputData.Rows.Count]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Keep row index for updates" sap:VirtualizedContainerService.HintSize="467.2,113.6" sap2010:WorkflowViewState.IdRef="Assign_11">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Object">[TransactionData("RowIndex")]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Object">[inputData.Rows.IndexOf(freshItem)]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:LogMessage DisplayName="Log found message" sap:VirtualizedContainerService.HintSize="467.2,165.6" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[String.Format(&quot;Next transaction [{0}/{1}] {2}&quot;, TransactionData(&quot;RowIndex&quot;), TransactionData(&quot;RowCount&quot;), TransactionData(&quot;ID&quot;))]" />
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>